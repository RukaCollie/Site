AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create the resources necessary for hosting a simple personal static website
Parameters:
  DomainName:
    Description: Name of domain to bind hosted zone to (do not include "www.")
    Type: String
    Default: colliepa.ws
  Region: #TODO use preconfigured region
    Description: Default region to locate resources into
    Type: String
    Default: ap-southeast-2
  HostedZoneId:
    Description: Hosted zone ID for S3 buckets in this region
    Type: String
    Default: Z2FDTNDATAQYW2
  VpcCidrBlock:
    Description: CIDR Block to allocate VPC
    Type: String
    Default: 10.0.0.0/16
Resources:
  # may not need?
  Vpc:
    Type: AWS::EC2::VPC
    Description: Test VPC (probably unnecessary right now)
    Properties: 
      CidrBlock: !Ref VpcCidrBlock

  # may not need?
  Dns: 
    Type: AWS::Route53::HostedZone
    Properties: 
      HostedZoneConfig: 
        Comment: Hosted zone for static site
      Name: !Ref DomainName

  RecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      Comment: DNS name for static S3
      RecordSets:
      - Name: !Ref DomainName
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudfrontDistribution.DomainName
          HostedZoneId: !Ref HostedZoneId
      - Name: !Sub www.${DomainName}
        Type: CNAME
        TTL: 900
        ResourceRecords:
        - !GetAtt WwwRootS3Bucket.DomainName

  # note: sigh, public buckets don't support HTTPS SSL/TLS so you'll need a cloudfront
  # https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/RoutingToS3Bucket.html
  RootS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
  WwwRootS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub www.${DomainName}
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref RootS3Bucket

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: S3OpenAccessPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref RootS3Bucket
                - /*
      Bucket: !Ref RootS3Bucket

  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt RootS3Bucket.DomainName
          Id: RootS3Origin
          S3OriginConfig:
            OriginAccessIdentity: '' # TODO: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html
        Enabled: true
        Comment: Cloudfront distribution for HTTPS support
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          Compress: true
          TargetOriginId: RootS3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
        HttpVersion: http2
        PriceClass: PriceClass_100
        ViewerCertificate: # TODO: potentially change this to ACM cert
          CloudFrontDefaultCertificate: true