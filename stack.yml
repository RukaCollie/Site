AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create the resources necessary for hosting a simple personal static website

Parameters:
  DomainName:
    Description: Name of domain to bind hosted zone to (do not include "www.")
    Type: String
    Default: colliepa.ws
  DomainCertificate:
    Description: ARN of ACM certificate fort the domain to host
    Type: String
  HostedZoneId:
    Description: Hosted zone ID for S3 buckets in this region
    Type: String
    Default: Z2FDTNDATAQYW2
  VpcCidrBlock:
    Description: CIDR Block to allocate VPC
    Type: String
    Default: 10.0.0.0/16

Mappings:
  RegionMap:
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website-ap-northeast-2.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ap-south-1:
      Suffix: .s3-website-ap-south-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website-us-east-2.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com

Resources:
  # may not need?
  Vpc:
    Type: AWS::EC2::VPC
    Description: Test VPC (probably unnecessary right now)
    Properties: 
      CidrBlock: !Ref VpcCidrBlock

  # may not need?
  Dns: 
    Type: AWS::Route53::HostedZone
    Properties: 
      HostedZoneConfig: 
        Comment: Hosted zone for static site
      Name: !Ref DomainName

  RecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${DomainName}.
      Comment: DNS name for static S3
      RecordSets:
      - Name: !Ref DomainName
        Type: A
        AliasTarget:
          DNSName: !GetAtt CloudfrontDistribution.DomainName
          HostedZoneId: !Ref HostedZoneId
      - Name: !Sub www.${DomainName}
        Type: CNAME
        TTL: 900
        ResourceRecords:
        - !GetAtt RedirectCloudFrontDistribution.DomainName

  RootS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
  WwwRootS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Sub www.${DomainName}
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
          Protocol: https

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: S3OpenAccessPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref RootS3Bucket
                - /*
      Bucket: !Ref RootS3Bucket

  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Comment: Cloudfront distribution for HTTPS support
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          Compress: true
          TargetOriginId: RootS3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        Origins:
        - DomainName: !Join ['', [!Ref RootS3Bucket, !FindInMap [RegionMap, !Ref 'AWS::Region', Suffix]]]
          Id: RootS3Origin
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref DomainCertificate
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only

  # Because of www. we also need a cloudfront to redirect to the www bucket which will redirect to the APEX
  RedirectCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub www.${DomainName}
        Comment: www redirect
        DefaultCacheBehavior:
          TargetOriginId: WwwRootS3Origin
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: true
            Cookies:
             Forward: none
          ViewerProtocolPolicy: allow-all
        Enabled: true
        HttpVersion: http2
        Origins:
        - DomainName: !Join ['', [!Ref WwwRootS3Bucket, !FindInMap [RegionMap, !Ref 'AWS::Region', Suffix]]]
          Id: WwwRootS3Origin
          CustomOriginConfig:
            HTTPPort: '80'
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: !Ref DomainCertificate
          MinimumProtocolVersion: TLSv1.2_2018
          SslSupportMethod: sni-only